name: Android CI/CD
on:
  pull_request:
    branches:
      - develop
      - staging
      - main
  push:
    branches:
      - develop
      - staging
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: '11' # 안드로이드 Gradle Plugin 7.4.1을 쓰기 위한 최소 자바 버전은 11이다
          distribution: 'adopt'

      - name: Checkout
        uses: actions/checkout@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew # Build with Gradle을 실행하려면 권한이 필요하다. 권한을 요청하는 스크립트

      - name: Build and upload APK
          run: |
            BRANCH_NAME=$(echo "${{ github.ref }}" | sed -r "s/refs\/heads\///g")
            DATE=$(date +%Y%m%d)
            APK_NAME="${DATE}_${BRANCH_NAME}.apk"
            if [ "${BRANCH_NAME}" == "develop" ]; then
              ./gradlew assembleDevelop
              apk_path="./app/build/outputs/apk/develop/app-develop.apk"
            elif [ "${BRANCH_NAME}" == "staging" ]; then
              ./gradlew assembleStaging
              apk_path="./app/build/outputs/apk/staging/app-staging.apk"
            elif [ "${BRANCH_NAME}" == "master" ]; then
              ./gradlew assembleRelease
              apk_path="./app/build/outputs/apk/release/app-release.apk"
            fi
            cp "$apk_path" "./app/build/outputs/apk/$APK_NAME"
            echo "APK_PATH=./app/build/outputs/apk/$APK_NAME" >> $GITHUB_ENV

      - name: Send Slack notification
        uses: 8398a7/action-slack@v3 # Github Actions에서 Slack 알림을 보내기 위한 액션
        with:
          status: ${{ job.status }}
          text: |
            Build ${{ job.status }} for ${{ github.ref }} branch.
            APK file: ${{ env.APK_PATH }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: ${{ env.APK_PATH }}